#!/usr/bin/env python

# This file is part of onedrive-magic and distributed under the terms of the
# MIT license. See COPYING.

from __future__ import (absolute_import, division, print_function)
__metaclass__ = type

import datetime
import json
import os
import sys

from kitchen.text.converters import getwriter

from util import cli, quickxorhash

writer = getwriter('utf8')
sys.stdout = writer(sys.stdout)
sys.stderr = writer(sys.stderr)

cli = cli.CLI(['--dest', '--limit', '--exclude', 'file', 'action'])
client = cli.client

with open(cli.args.file, 'rb') as f:
    items = json.load(f)

if cli.args.action == 'list-filenames':
    for item in items:
        print(item['fullpath'])

elif cli.args.action in ('download-items', 'download-estimate'):
    destdir = cli.args.dest if cli.args.dest else '/var/tmp'
    exclude = []
    if cli.args.exclude:
        with open(cli.args.exclude, 'rb') as f:
            exclude = [e.rstrip() for e in list(f)]

    estimate = 0.0
    size = 0
    count = 0
    for item in items:
        if item['fullpath'] in exclude:
            cli.logger.debug(u'Skipping excluded {}...'.format(item['fullpath']))
            continue

        if cli.args.limit:
            if not item['fullpath'].startswith(cli.args.limit):
                cli.logger.debug(u'Skipping {}...'.format(item['fullpath']))
                continue

        if 'file' not in item:
            if 'folder' not in item:
                cli.logger.debug(u'Skipping non-file {}...'.format(item['fullpath']))
            continue

        dest = ''.join((destdir, item['fullpath']))
        cli.logger.info(u'Downloading {} to {}...'.format(item['fullpath'], dest))
        if cli.args.action == 'download-items':
            client.download_file(
                item['parentReference']['driveId'],
                item['id'],
                dest,
                item['file']['hashes']['quickXorHash'],
            )
        else:
            size += item['size']
            count += 1
            estimate += 1
            estimate += item['size'] / 15294809

    if cli.args.action == 'download-estimate':
        print('{:.2f} MiB across {} items, estimated {!s}'.format(size / (1024 ** 2), count, datetime.timedelta(seconds = int(estimate))))

else:
    print('Unsupported action {}'.format(cli.args.action), file = sys.stderr)
    sys.exit(1)
