#!/usr/bin/env python

# This file is part of ODM and distributed under the terms of the
# MIT license. See COPYING.

from __future__ import (absolute_import, division, print_function)
__metaclass__ = type

import json
import sys

import yaml

from util import cli, quickxorhash

cli = cli.CLI(['user', 'action'])
client = cli.client

if cli.args.action == 'show':
    json.dump(client.show_user(cli.args.user), sys.stdout, indent = 2)

elif cli.args.action == 'list-drives':
    drives = client.list_drives(cli.args.user)
    json.dump(drives, sys.stdout, indent = 2)

elif cli.args.action == 'list-items':
    drives = client.list_drives(cli.args.user)
    items = client.expand_items([drive['root'] for drive in drives])
    json.dump(items, sys.stdout, indent = 2)

elif cli.args.action == 'list-notebooks':
    json.dump(client.list_notebooks(cli.args.user), sys.stdout, indent = 2)

elif cli.args.action == 'download-notebooks':
    notebooks = client.list_notebooks(cli.args.user)
    for n in notebooks:
        for s in n['sections']:
            for page in s['pages']:
                client.download_page(page['contentUrl'], '/var/tmp/{}/{}/{}/{}'.format(cli.args.user, n['displayName'], s['displayName'], page['id']))

else:
    print('Unsupported action {}'.format(cli.args.action), file = sys.stderr)
    sys.exit(1)
